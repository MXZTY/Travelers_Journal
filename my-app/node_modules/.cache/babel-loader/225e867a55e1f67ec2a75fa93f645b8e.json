{"ast":null,"code":"import _objectSpread from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/src/components/EditPhotoForm.js\";\nimport React from 'react';\nimport './EditPhotoForm.css';\n\nvar EditPhotoForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditPhotoForm, _React$Component);\n\n  function EditPhotoForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditPhotoForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditPhotoForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setView = function () {\n      _this.props.setView(_this.props.currentPhoto);\n    };\n\n    _this.setMap = function () {\n      _this.props.setMap(_this.props.currentPhoto);\n    };\n\n    _this.handleChange = function (e) {\n      //find the current photo in our photo array\n      var id = _this.props.currentPhoto;\n\n      var photo = _this.props.photos.find(function (p) {\n        return p.id === id;\n      }); //update the photo using these 3 steps ...\n      //1. make a clone of the current photo object\n\n\n      var clonedPhoto = _objectSpread({}, photo); //2. update value of field that just changed. \n\n\n      clonedPhoto[e.currentTarget.name] = e.currentTarget.value; //3. tell parent (or above) to update the state for this photo. \n\n      _this.props.updatePhoto(_this.props.currentPhoto, clonedPhoto);\n    };\n\n    return _this;\n  }\n\n  _createClass(EditPhotoForm, [{\n    key: \"render\",\n    value: function render() {\n      var id = this.props.currentPhoto;\n      var imgURL = \"https://storage.googleapis.com/funwebdev-3rd-travel/medium/\";\n\n      if (this.props.photos.length > 0) {\n        var photo = this.props.photos.find(function (p) {\n          return p.id === id;\n        });\n        console.log(id); //Trigger the handlChange function when a change is made to any of the fields. \n\n        return React.createElement(\"article\", {\n          className: \"details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"detailsPhotoBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          className: \"photoForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"legend\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \" Edit Photo Details \"), React.createElement(\"img\", {\n          src: imgURL + photo.path,\n          alt: photo.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Title\"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          onChange: this.handleChange,\n          value: photo.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"City\"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          onChange: this.handleChange,\n          value: photo.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Country\"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"country\",\n          onChange: this.handleChange,\n          value: photo.country,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        })), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.setView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"View\"), React.createElement(\"button\", {\n          onClick: this.setMap,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Map\")));\n      } else {\n        return null;\n      }\n    } // function for calling the parent setView to change the view to Photo View with the current Photo id. \n\n  }]);\n\n  return EditPhotoForm;\n}(React.Component);\n\nexport default EditPhotoForm;","map":{"version":3,"sources":["/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/src/components/EditPhotoForm.js"],"names":["React","EditPhotoForm","setView","props","currentPhoto","setMap","handleChange","e","id","photo","photos","find","p","clonedPhoto","currentTarget","name","value","updatePhoto","imgURL","length","console","log","path","title","city","country","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './EditPhotoForm.css';\r\n\r\nclass EditPhotoForm extends React.Component{\r\n\r\n    render(){\r\n        const id = this.props.currentPhoto\r\n        const imgURL =  `https://storage.googleapis.com/funwebdev-3rd-travel/medium/`;\r\n        if (this.props.photos.length > 0){\r\n            const photo = this.props.photos.find( p => p.id === id);\r\n            console.log(id);\r\n            //Trigger the handlChange function when a change is made to any of the fields. \r\n            return(\r\n                <article className=\"details\">\r\n                     <div className=\"detailsPhotoBox\">\r\n                        <form className=\"photoForm\">\r\n                            <legend> Edit Photo Details </legend>\r\n                            <img src={imgURL + photo.path} alt={photo.title} />\r\n                            <label>Title</label>\r\n                            <input type='text' name='title' onChange={this.handleChange} value={photo.title} />\r\n                            <label>City</label>\r\n                            <input type='text' name='city' onChange={this.handleChange} value={photo.city} />\r\n                            <label>Country</label>\r\n                            <input type='text' name='country' onChange={this.handleChange} value={photo.country} />\r\n                        </form>\r\n                        <br />\r\n                        <button onClick={this.setView}>View</button>\r\n                        <button onClick={this.setMap}>Map</button>\r\n                    </div>\r\n                </article>\r\n            );\r\n        } else {\r\n           return null;\r\n        }\r\n    }   \r\n\r\n    // function for calling the parent setView to change the view to Photo View with the current Photo id. \r\n    setView = () =>{\r\n        this.props.setView(this.props.currentPhoto);\r\n    }\r\n\r\n    // function for calling the parent set map to change the view to Map View with the current Photo id. \r\n    setMap = () => {\r\n        this.props.setMap(this.props.currentPhoto);\r\n    }\r\n\r\n    handleChange = e => {\r\n        //find the current photo in our photo array\r\n        const id = this.props.currentPhoto;\r\n        const photo = this.props.photos.find( p => p.id === id);\r\n\r\n        //update the photo using these 3 steps ...\r\n\r\n        //1. make a clone of the current photo object\r\n        const clonedPhoto = { ...photo};\r\n        //2. update value of field that just changed. \r\n        clonedPhoto[e.currentTarget.name] = e.currentTarget.value;\r\n\r\n        //3. tell parent (or above) to update the state for this photo. \r\n        this.props.updatePhoto(this.props.currentPhoto, clonedPhoto);\r\n    }\r\n\r\n}\r\n\r\nexport default EditPhotoForm;"]},"metadata":{},"sourceType":"module"}