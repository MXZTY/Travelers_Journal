{"ast":null,"code":"import _regeneratorRuntime from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport HeaderApp from './components/HeaderApp.js';\nimport Browse from './components/Browse.js';\nimport Home from './components/Home.js';\nimport Favorites from './components/Favorites';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport About from './components/About.js';\nimport { Route } from 'react-router-dom';\n\nvar _ = require('lodash');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.updateStateWithLocalStorage = function () {\n      // if the local storage length is 0 there are no favorited photos stored in localStorage. \n      if (localStorage.length > 0) {\n        // for each of the items in the localStorage, iterate through.\n        for (var i = 0; i < localStorage.length; i++) {\n          // pass in the parse key value to the addImageToFavorites to add it to the favorites bar. \n          // this will take in the updated values of that photo too if they have been changed on the server,\n          // rather than using the informatio stored in local storage for each photo it only uses the id to call the addToFavorites. \n          _this.addImageToFavorites(JSON.parse(localStorage.key(i)), true);\n        }\n      }\n    };\n\n    _this.updatePhoto = function (id, photo) {\n      //Create a deep clone of photos from the state and use lodash function fot ehat task. \n      var copyPhotos = cloneDeep(_this.state.photos); //find photo to update in cloned array\n\n      var photoToReplace = copyPhotos.find(function (p) {\n        return p.id === id;\n      }); // replace photo fields with edited values\n\n      photoToReplace.title = photo.title;\n      photoToReplace.city = photo.city;\n      photoToReplace.country = photo.country; //update the state\n\n      _this.setState({\n        photos: copyPhotos\n      });\n    };\n\n    _this.deletePhoto = function (id) {\n      console.log(\"DELETING PHOTO \" + id);\n      var copyPhotos = cloneDeep(_this.state.photos);\n      var photoToDelete = copyPhotos.find(function (p) {\n        return p.id === id;\n      });\n\n      if (photoToDelete !== null) {\n        var filteredPhotos = _.remove(copyPhotos, function (photoToDelete) {\n          return photoToDelete.id !== id;\n        });\n\n        _this.setState({\n          photos: filteredPhotos\n        });\n      }\n\n      if (_this.state.favorites.find(function (f) {\n        return f.id === id;\n      })) {\n        //Create a deep clone of the favorites array stored in state using lodash/cloneDeep\n        var copyFavorites = cloneDeep(_this.state.favorites); // use the lodash remove function to remove the item the matches the id of the focused item. \n\n        _.remove(copyFavorites, function (favoriteItem) {\n          return favoriteItem.id === id;\n        });\n\n        _this.setState({\n          favorites: copyFavorites\n        });\n      }\n    };\n\n    _this.addImageToFavorites = function (id) {\n      var loading = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      //Create a deep clone of the favorites array stored in state using lodash/cloneDeep\n      var copyFavorites = cloneDeep(_this.state.favorites); //create a favorite Item by finding the photo object based on the id\n\n      var favoriteItem = _this.state.photos.find(function (p) {\n        return p.id === id;\n      });\n\n      localStorage.setItem(id, JSON.stringify(favoriteItem)); //if the item is already in the favorites list, remove the item when the favorite button is pressed.\n      // do not remove the item from favorites if loading is set to true  \n\n      if (_this.state.favorites.find(function (f) {\n        return f.id === id;\n      }) && !loading) {\n        console.log('you are unfavoriting' + favoriteItem);\n        localStorage.removeItem(id); // use the lodash remove function to remove the item the matches the id of the focused item. \n\n        _.remove(copyFavorites, function (favoriteItem) {\n          return favoriteItem.id === id;\n        });\n      } else {\n        // if the item is not in the favorite list, simply push it onto the temp array. \n        copyFavorites.push(favoriteItem);\n      } // set the favorites array stored in state to the newly updated favorites list. \n\n\n      _this.setState({\n        favorites: copyFavorites\n      });\n    };\n\n    _this.state = {\n      photos: [],\n      favorites: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, response, jsonData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                url = \"http://randyconnolly.com/funwebdev/services/travel/images.php\";\n                _context.next = 4;\n                return fetch(url);\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                jsonData = _context.sent;\n                this.loading = true;\n                this.setState({\n                  photos: jsonData\n                }); // call the update state with local storage method to restore the user favorited photos.\n\n                _context.next = 12;\n                return this.updateStateWithLocalStorage();\n\n              case 12:\n                this.loading = false; // localStorage.clear();\n\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 15]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(HeaderApp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        exact: true,\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about\",\n        exact: true,\n        component: About,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/browse\",\n        exact: true,\n        render: function render(props) {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(Favorites, {\n            favorites: _this2.state.favorites,\n            photos: _this2.state.photos,\n            addImageToFavorites: _this2.addImageToFavorites,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }), React.createElement(Browse, {\n            photos: _this2.state.photos,\n            updatePhoto: _this2.updatePhoto,\n            addImageToFavorites: _this2.addImageToFavorites,\n            deletePhoto: _this2.deletePhoto,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/src/App.js"],"names":["React","Component","HeaderApp","Browse","Home","Favorites","cloneDeep","About","Route","_","require","App","props","updateStateWithLocalStorage","localStorage","length","i","addImageToFavorites","JSON","parse","key","updatePhoto","id","photo","copyPhotos","state","photos","photoToReplace","find","p","title","city","country","setState","deletePhoto","console","log","photoToDelete","filteredPhotos","remove","favorites","f","copyFavorites","favoriteItem","loading","setItem","stringify","removeItem","push","url","fetch","response","json","jsonData","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport HeaderApp from './components/HeaderApp.js';\nimport Browse from './components/Browse.js'\nimport Home from './components/Home.js';\nimport Favorites from './components/Favorites';\nimport * as cloneDeep from 'lodash/cloneDeep';\nimport About from './components/About.js';\nimport { Route } from 'react-router-dom';\n\n\nconst _ = require('lodash');\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { photos: [], favorites: []};\n  }\n\n  async componentDidMount() {\n    try{\n      const url = \"http://randyconnolly.com/funwebdev/services/travel/images.php\";\n      const response = await fetch(url);\n      const jsonData = await response.json();\n      this.loading = true;\n      this.setState( { photos: jsonData } );\n      // call the update state with local storage method to restore the user favorited photos.\n      await this.updateStateWithLocalStorage();\n      this.loading = false;\n      // localStorage.clear();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  updateStateWithLocalStorage = () => {\n    // if the local storage length is 0 there are no favorited photos stored in localStorage. \n    if(localStorage.length > 0) {      \n      // for each of the items in the localStorage, iterate through.\n      for(let i = 0; i < localStorage.length; i++){\n        // pass in the parse key value to the addImageToFavorites to add it to the favorites bar. \n        // this will take in the updated values of that photo too if they have been changed on the server,\n        // rather than using the informatio stored in local storage for each photo it only uses the id to call the addToFavorites. \n        this.addImageToFavorites(JSON.parse(localStorage.key(i)), true);\n      }\n\n    }\n  }\n\n  updatePhoto = (id, photo) => {\n    //Create a deep clone of photos from the state and use lodash function fot ehat task. \n    const copyPhotos = cloneDeep(this.state.photos);\n    //find photo to update in cloned array\n    const photoToReplace = copyPhotos.find( p => p.id === id);\n    // replace photo fields with edited values\n    photoToReplace.title = photo.title;\n    photoToReplace.city = photo.city;\n    photoToReplace.country = photo.country;\n    //update the state\n    this.setState({photos: copyPhotos});\n  }\n\n  deletePhoto = (id) => {\n    console.log(\"DELETING PHOTO \" + id);\n    let copyPhotos = cloneDeep(this.state.photos);\n    let photoToDelete = copyPhotos.find(p => p.id === id);\n    \n    if(photoToDelete !== null) { \n      let filteredPhotos = _.remove(copyPhotos, (photoToDelete) => {\n          return photoToDelete.id !== id;\n    });\n    this.setState({photos: filteredPhotos});\n  }\n    if(this.state.favorites.find(f => f.id === id)){\n      //Create a deep clone of the favorites array stored in state using lodash/cloneDeep\n      const copyFavorites = cloneDeep(this.state.favorites);\n      // use the lodash remove function to remove the item the matches the id of the focused item. \n      _.remove(copyFavorites, (favoriteItem) => {\n        return favoriteItem.id === id;\n      });\n\n      this.setState({favorites: copyFavorites});\n      }\n  }\n\n  addImageToFavorites = (id, loading=false) => {\n    //Create a deep clone of the favorites array stored in state using lodash/cloneDeep\n    const copyFavorites = cloneDeep(this.state.favorites);\n    //create a favorite Item by finding the photo object based on the id\n    const favoriteItem = this.state.photos.find( p => p.id === id);\n\n    localStorage.setItem(id, JSON.stringify(favoriteItem));\n\n    //if the item is already in the favorites list, remove the item when the favorite button is pressed.\n    // do not remove the item from favorites if loading is set to true  \n    if(this.state.favorites.find(f => f.id === id) && !loading){\n      console.log('you are unfavoriting' + favoriteItem);\n\n      localStorage.removeItem(id);\n      // use the lodash remove function to remove the item the matches the id of the focused item. \n      _.remove(copyFavorites, (favoriteItem) => {\n        return favoriteItem.id === id;\n      });\n    } else {\n      // if the item is not in the favorite list, simply push it onto the temp array. \n      copyFavorites.push(favoriteItem);\n    }\n\n    \n\n    // set the favorites array stored in state to the newly updated favorites list. \n    this.setState({favorites: copyFavorites});\n  }\n\n  render() {\n    return (\n      <div>\n        <HeaderApp />\n        <Route path='/' exact component={Home} />\n        <Route path='/home' exact component={Home} />\n        <Route path='/about' exact component={About} />\n        <Route path='/browse' exact \n            render={ (props) =>\n              <React.Fragment>\n                <Favorites favorites={this.state.favorites} photos={this.state.photos} addImageToFavorites={this.addImageToFavorites}/>\n                <Browse photos={this.state.photos} updatePhoto={this.updatePhoto} addImageToFavorites={this.addImageToFavorites} deletePhoto={this.deletePhoto}/>\n              </React.Fragment>\n            }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}