{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/src/components/Browse.js\";\nimport React, { Component } from \"react\";\nimport PhotoList from \"./PhotoList.js\";\nimport ViewPhoto from \"./ViewPhoto.js\";\nimport EditPhotoForm from \"./EditPhotoForm.js\";\nimport PhotoMap from \"./PhotoMap.js\";\n\nvar Browser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Browser, _Component);\n\n  // default the current photo value to 1, and set the default view to photoview, and no queryValue(filter).\n  function Browser(props) {\n    var _this;\n\n    _classCallCheck(this, Browser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Browser).call(this, props));\n\n    _this.updateCoord = function (userLat, userLong) {\n      _this.setState({\n        userLat: userLat,\n        userLong: userLong\n      });\n    };\n\n    _this.getLocation = function () {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (p) {\n          //update Coord\n          _this.updateCoord(p.coords.latitude, p.coords.longitude);\n        });\n      }\n    };\n\n    _this.renderEdit = function () {\n      return React.createElement(EditPhotoForm, {\n        photos: _this.props.photos,\n        currentPhoto: _this.state.currentPhoto,\n        updatePhoto: _this.props.updatePhoto,\n        setMap: _this.setMap,\n        setView: _this.setView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    };\n\n    _this.renderView = function () {\n      return React.createElement(ViewPhoto, {\n        photos: _this.props.photos,\n        currentPhoto: _this.state.currentPhoto,\n        setEdit: _this.setEdit,\n        setMap: _this.setMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    };\n\n    _this.renderMap = function () {\n      return React.createElement(PhotoMap, {\n        key: _this.state.currentPhoto,\n        photos: _this.props.photos,\n        currentPhoto: _this.state.currentPhoto,\n        setEdit: _this.setEdit,\n        setView: _this.setView,\n        userLat: _this.state.userLat,\n        userLong: _this.state.userLong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    };\n\n    _this.deletePhoto = function (id) {\n      if (id === _this.state.currentPhoto) {\n        console.log(id + 1, \" asldkjfl   \", _this.state.currentPhoto);\n\n        _this.props.deletePhoto(id);\n\n        _this.setState({\n          currentPhoto: parseInt(id + 1)\n        });\n      } else {\n        _this.props.deletePhoto(id);\n      }\n    };\n\n    _this.setEdit = function (id) {\n      console.log(\"Setting the Edit View for Photo: \" + id);\n\n      _this.setState({\n        currentPhoto: id,\n        isEdit: true,\n        isMap: false\n      });\n\n      return _this.renderEdit;\n    };\n\n    _this.setMap = function (id) {\n      console.log(\"Setting the Map View for Photo: \" + id);\n\n      _this.setState({\n        currentPhoto: id,\n        isMap: true,\n        isEdit: false\n      });\n\n      return _this.renderMap;\n    };\n\n    _this.setView = function (id) {\n      console.log(\"Setting the default View for Photo: \" + id);\n\n      _this.setState({\n        currentPhoto: id,\n        isMap: false,\n        isEdit: false\n      });\n\n      return _this.renderView;\n    };\n\n    _this.showImageDetails = function (id) {\n      _this.setState({\n        currentPhoto: id,\n        isEdit: false,\n        isMap: false\n      });\n    };\n\n    _this.state = {\n      photos: props.photos,\n      currentPhoto: 1,\n      isEdit: false,\n      isMap: false,\n      queryValue: null,\n      userLat: 0,\n      userLong: 0\n    };\n    return _this;\n  }\n\n  _createClass(Browser, [{\n    key: \"render\",\n    // Render the filtered Photo list\n    // also conditional rendering based on what view is set in the state (map view, edit view, or photo view)\n    value: function render() {\n      //get user Location\n      this.getLocation();\n      return React.createElement(\"section\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(PhotoList, {\n        setView: this.setView,\n        setEdit: this.setEdit,\n        setMap: this.setMap,\n        filterPhotos: this.filterPhotos,\n        photos: this.props.photos,\n        addImageToFavorites: this.props.addImageToFavorites,\n        deletePhoto: this.deletePhoto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), !this.state.isEdit && !this.state.isMap ? this.renderView() : null, !this.state.isMap && this.state.isEdit ? this.renderEdit() : null, !this.state.isEdit && this.state.isMap ? this.renderMap() : null);\n    } // this function returns the EditPhotoForm, and requires the setMap and setView as props to change the view.\n\n  }]);\n\n  return Browser;\n}(Component);\n\nexport default Browser;","map":{"version":3,"sources":["/mnt/c/Users/mtyso/Desktop/web3_asg2/my-app/src/components/Browse.js"],"names":["React","Component","PhotoList","ViewPhoto","EditPhotoForm","PhotoMap","Browser","props","updateCoord","userLat","userLong","setState","getLocation","navigator","geolocation","getCurrentPosition","p","coords","latitude","longitude","renderEdit","photos","state","currentPhoto","updatePhoto","setMap","setView","renderView","setEdit","renderMap","deletePhoto","id","console","log","parseInt","isEdit","isMap","showImageDetails","queryValue","filterPhotos","addImageToFavorites"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PhotoList from \"./PhotoList.js\";\r\nimport ViewPhoto from \"./ViewPhoto.js\";\r\nimport EditPhotoForm from \"./EditPhotoForm.js\";\r\nimport PhotoMap from \"./PhotoMap.js\";\r\n\r\nclass Browser extends Component {\r\n  // default the current photo value to 1, and set the default view to photoview, and no queryValue(filter).\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      photos: props.photos,\r\n      currentPhoto: 1,\r\n      isEdit: false,\r\n      isMap: false,\r\n      queryValue: null,\r\n      userLat: 0,\r\n      userLong: 0\r\n    };\r\n  }\r\n\r\n  updateCoord = (userLat, userLong) => {\r\n    this.setState({\r\n      userLat,\r\n      userLong\r\n    });\r\n  };\r\n\r\n  getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(p => {\r\n        //update Coord\r\n        this.updateCoord(p.coords.latitude, p.coords.longitude);\r\n      });\r\n    }\r\n  };\r\n\r\n  // Render the filtered Photo list\r\n  // also conditional rendering based on what view is set in the state (map view, edit view, or photo view)\r\n  render() {\r\n    //get user Location\r\n    this.getLocation();\r\n\r\n    return (\r\n      <section className=\"container\">\r\n        <PhotoList\r\n          setView={this.setView}\r\n          setEdit={this.setEdit}\r\n          setMap={this.setMap}\r\n          filterPhotos={this.filterPhotos}\r\n          photos={this.props.photos}\r\n          addImageToFavorites={this.props.addImageToFavorites}\r\n          deletePhoto={this.deletePhoto}\r\n        />\r\n        {!this.state.isEdit && !this.state.isMap ? this.renderView() : null}\r\n        {!this.state.isMap && this.state.isEdit ? this.renderEdit() : null}\r\n        {!this.state.isEdit && this.state.isMap ? this.renderMap() : null}\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // this function returns the EditPhotoForm, and requires the setMap and setView as props to change the view.\r\n  renderEdit = () => {\r\n    return (\r\n      <EditPhotoForm\r\n        photos={this.props.photos}\r\n        currentPhoto={this.state.currentPhoto}\r\n        updatePhoto={this.props.updatePhoto}\r\n        setMap={this.setMap}\r\n        setView={this.setView}\r\n      />\r\n    );\r\n  };\r\n\r\n  // this function returns the viewphoto component, the setEdit and setMap are required as props to change the view\r\n  renderView = () => {\r\n    return (\r\n      <ViewPhoto\r\n        photos={this.props.photos}\r\n        currentPhoto={this.state.currentPhoto}\r\n        setEdit={this.setEdit}\r\n        setMap={this.setMap}\r\n      />\r\n    );\r\n  };\r\n\r\n  // *****Issues we had with centering and rerendering the map where resolved by simply adding the key to the props... ¯\\_(ツ)_/¯\r\n  // ***adding a key value forces the map to rerender***\r\n  // credit to : **[istarkov](/istarkov) ** commented [on Dec 15, 2015](#issuecomment-164833277) @ https://github.com/google-map-react/google-map-react/issues/76\r\n  renderMap = () => {\r\n    return (\r\n      <PhotoMap\r\n        key={this.state.currentPhoto}\r\n        photos={this.props.photos}\r\n        currentPhoto={this.state.currentPhoto}\r\n        setEdit={this.setEdit}\r\n        setView={this.setView}\r\n        userLat={this.state.userLat}\r\n        userLong ={this.state.userLong}\r\n      />\r\n    );\r\n  };\r\n\r\n  deletePhoto = id => {\r\n    if (id === this.state.currentPhoto) {\r\n      console.log(id + 1, \" asldkjfl   \", this.state.currentPhoto);\r\n\r\n      this.props.deletePhoto(id);\r\n      this.setState({ currentPhoto: parseInt(id + 1) });\r\n    } else {\r\n      this.props.deletePhoto(id);\r\n    }\r\n  };\r\n\r\n  // function for setting the state to the edit view for the photo id provided.\r\n  // returns the render edit function above after the state is set to the new id\r\n  setEdit = id => {\r\n    console.log(\"Setting the Edit View for Photo: \" + id);\r\n    this.setState({ currentPhoto: id, isEdit: true, isMap: false });\r\n    return this.renderEdit;\r\n  };\r\n\r\n  // function for setting the state to the map view for the photo id provided.\r\n  // returns the render map function above after the state is set to the new id.\r\n  setMap = id => {\r\n    console.log(\"Setting the Map View for Photo: \" + id);\r\n    this.setState({ currentPhoto: id, isMap: true, isEdit: false });\r\n    return this.renderMap;\r\n  };\r\n\r\n  // function for setting the state to the regular view for the photo id provided.\r\n  // returns the render view function above after the state is set to the new id.\r\n  setView = id => {\r\n    console.log(\"Setting the default View for Photo: \" + id);\r\n    this.setState({ currentPhoto: id, isMap: false, isEdit: false });\r\n    return this.renderView;\r\n  };\r\n\r\n  showImageDetails = id => {\r\n    this.setState({ currentPhoto: id, isEdit: false, isMap: false });\r\n  };\r\n}\r\nexport default Browser;\r\n"]},"metadata":{},"sourceType":"module"}